'use strict';

// деструктуризация для массива
// особый синтаксис присваивания, при котором можно присвоить массив
// сразу нескольким переменным, разбив его при этом на части
{
  let array = [1, 2, 3, 4, 5];

  let [a, b] = array; // в переменную a записывается первый элемент из массива array, а в b - следующий

  console.log(a); // 1
  console.log(b);  // 2
}

// если нам какие-то элементы массива не нужны: можно оставить пропуски
{
  let array = [1, 2, 3, 4, 5];

  let [, , c] = array; // переменной c приcвоится третий по порядку элемент массива array

  console.log(c); // 3
}

// также в ES6 появился оператор spread для получения оставшихся элементов
// обозначается тремя точками и именем переменной
// пока работает только на массивах (на объектах пока на стадии черновика)
{
  let array = [1, 2, 3, 4, 5];
  let [x, ...rest] = array;
  // любое количество оставшихся элементов скопируются в переменную rest
  // в нашем случае, все, кроме первого

  console.log(x); // 1
  console.log(rest); // [2, 3, 4, 5]
}

// если значения, которое мы хотим присвоить, в переменной нет,
// то значение этой переменной будет равно undefined
{
  let [x] = [];

  console.log(x); // undefined
}

// но ES6 позволяет задавать значение по умолчанию для подобных случаев
// если элемента нет - в переменную присвоится значение, указанное по умолчанию
// если появится, то присвоится появившееся значение
{
  let [x = 'default'] = [];

  console.log(x); // default
}

// деструктуризацию можно использовать и при работе с объектами
// при этом мы указываем, какие свойства в какие переменные должны быть записаны
{
  let me = {
    name: 'Polina',
    age: 29,
    gender: 'female',
    city: 'Kusa'
  };

  let { name, city } = me;
  // справа указываем существующий объект, который хотим разбить на переменные
  // а слева - список переменных

  console.log(name); // Polina
  console.log(city); // Kusa
}

// есть возможность присвоить свойства в переменные с другим именем,
// отличным от названия самого свойства
// для этого используется двоеточие (:)
{
  let me = {
    name: 'Polina',
    age: 29,
    gender: 'female',
    city: 'Kusa'
  };

  let { name: firstName} = me;
  // запись означает, что свойство name будет записано в переменную firstName

  console.log(firstName); // Polina
}

// для объектов так же доступно присвоение значений по умолчанию
{
  let { name = 'Noname', age = 0, city: birthCity = 'Chelyabinsk' } = {};

  console.log(name); // Noname
  console.log(age); // 0
  console.log(birthCity); // Chelyabinsk
}